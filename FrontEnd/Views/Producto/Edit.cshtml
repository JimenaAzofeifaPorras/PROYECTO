@model FrontEnd.Models.ProductoViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ProductoViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @Html.HiddenFor(Model => Model.IdProducto)

            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Estado" class="control-label"></label>
                <input asp-for="Estado" class="form-control" />
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Precio" class="control-label"></label>
                <input asp-for="Precio" class="form-control" />
                <span asp-validation-for="Precio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="file" asp-for="Imagen" class="form-control" name="ListaImagenes" />
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

            @{
                if (Model.Imagen != null)
                {

                    string imageBase64 = Convert.ToBase64String(Model.Imagen);
                    string imageSrc = string.Format("data:ContentType = image/jpg;base64,{0}", imageBase64);

                    <img src="@imageSrc" width="500" height="500" />


                }

            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}